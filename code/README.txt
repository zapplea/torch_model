package list:
 1. numpy/1.14.0
 2. pytorch/0.3.1.post2
 3. sklearn/0.19.dev0
 4. python/3.6


Dataset:
the dataset is provided in /code/dataset which is the same to what is provided in u6068252/dataset. I write "data_generator.py" to split features and labels, and convert them to numpy array and store them in data.pkl.
data.pkl is a pickle file.
You can use "python3 data_generator.py" to run it.

Structure of the program:
It's composed of three experiments which are corresponding to three experiments in the paper.


Configuration of each neural network:
Each program is configured in a .py file named with "learn" in its name, like super_proto_learn.py in experiment1 and semi_learn.py in experiment3.

How to use GPU:
The program will use gpu when set nn_config['cuda'] to "True" in configuration files.  and the pytorch can detect available gpu.
Currently, it is false, so the program will use CPU to train.

How to run the code:
In experiment1:
you can type "python3 cascading_learn.py" in command line to run the cascading network, and use "python3 prototypical_learn.py" to run the prototypical network.
The performance of cascadign network is not stable, you can re-run the program if the final accuracy or f1 socre is not appropriate.
in Experiment2:
you can type "python3 cnn_learn.py" to run "super_proto_cnn.py"; and "super_proto_linear.py" can be run with "python3 linear_learn.py".

in Experiment3:
Type "python3 semi_learn.py" to run semi_proto

The warnining thrown by sklearn are not a error, it is because of poor performance of the neural network at the beginning.

Where is the report:
You can find result of the test after each epoch in folder report. You can read README.txt in report folder to know what is contained in each file generated by the program.
Please delete the old reports if you want to run the program again.
